# Configure correct color when opening nvim inside tmux session
set -g default-terminal "tmux-256color"
set-option -ga terminal-overrides ",xterm*:Tc"

# Set base index for windows and sessions to 1 instead of 0
set -g base-index 1

# Remove delay for exiting insert mode with ESC in Neovim
set -sg escape-time 0

# Change prefix key to C-a
set -g prefix C-a
unbind C-b
bind-key C-a send-prefix

# Change split horizontally to |
unbind %
bind | split-window -h 

# Change split vertically to -
unbind '"'
bind - split-window -v

# Bind r to tmux.conf reload
unbind r
bind r source-file ~/.tmux.conf

# Pane resizing vim like
bind -r j resize-pane -D 5
bind -r k resize-pane -U 5
bind -r l resize-pane -R 5
bind -r h resize-pane -L 5

# Switch to last window with C-Space (C-2)
unbind -T copy-mode 'C-Space'
bind -r 'C-Space' last-window

# Toggle synch panes with C-x (allows to type the same thing in all panes of the window)
bind C-x set-window-option synchronize-panes \; display-message "Synchronize-panes is now #{?pane_synchronized,on,off}"

################################################
# Pane switching like nvim config              #
################################################

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-Left' if-shell "$is_vim" 'send-keys C-Left'  'select-pane -L'
bind-key -n 'C-Down' if-shell "$is_vim" 'send-keys C-Down'  'select-pane -D'
bind-key -n 'C-Up' if-shell "$is_vim" 'send-keys C-Up'  'select-pane -U'
bind-key -n 'C-Right' if-shell "$is_vim" 'send-keys C-Right'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-Left' select-pane -L
bind-key -T copy-mode-vi 'C-Down' select-pane -D
bind-key -T copy-mode-vi 'C-Up' select-pane -U
bind-key -T copy-mode-vi 'C-Right' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# This comes from christoomey/vim-tmux-navigator plugin
# Normally it is installed just with:
# set -g @plugin 'christoomey/vim-tmux-navigator' # Navigate panes and nvim windows easily
#
# This allows to pane switch with Ctrl + <h,j,k,l> but in current setup <C-h> means backspace
# and looks like it can't be disabled. The workaround is to use Ctrl + <left,down.up.right> instead
# but requires this horrible config lines for tmux (in nvim was also modified but its prettier)

################################################
# Pane switching like nvim config              #
################################################

# Make pane full screen bind to m
bind -r m resize-pane -Z

# Allow mouse interaction
set -g mouse on

# Use vim like bindings for copy mode
set-window-option -g mode-keys vi

# Vim like copy mode
bind-key -T copy-mode-vi 'v' send -X begin-selection # start selecting text with "v"

# Copy text with y + get out of copy mode after copying + copy also to system clipboard
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
unbind -T copy-mode-vi MouseDragEnd1Pane # don't exit copy mode when dragging with mouse

# tmux-cht.sh integration
bind i run-shell "tmux neww $HOME/.local/scripts/tmux-cht.sh"

# tpm plugin
set -g @plugin 'tmux-plugins/tpm'

# List of tmux plugins
set -g @plugin 'jimeh/tmux-themepack'
set -g @plugin 'tmux-plugins/tmux-resurrect' # persist tmux sessions after computer restart
set -g @plugin 'tmux-plugins/tmux-continuum' # automatically saves sessions for you every 15 minutes

set -g @themepack 'powerline/block/cyan'

set -g @resurrect-capture-pane-contents 'on'
set -g @continuum-restore 'on'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
